# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_dspace_interface', [dirname(__file__)])
        except ImportError:
            import _dspace_interface
            return _dspace_interface
        if fp is not None:
            try:
                _mod = imp.load_module('_dspace_interface', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _dspace_interface = swig_import_helper()
    del swig_import_helper
else:
    import _dspace_interface
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


M_DS_NOFILE = _dspace_interface.M_DS_NOFILE
M_DS_NULL = _dspace_interface.M_DS_NULL
M_DS_NOFORMAT = _dspace_interface.M_DS_NOFORMAT
M_DS_WRONG = _dspace_interface.M_DS_WRONG
M_DS_EXISTS = _dspace_interface.M_DS_EXISTS
M_DS_NOTHREAD = _dspace_interface.M_DS_NOTHREAD
M_DS_MALLOC = _dspace_interface.M_DS_MALLOC
M_DS_NOT_IMPL = _dspace_interface.M_DS_NOT_IMPL
M_DS_PARSE = _dspace_interface.M_DS_PARSE
A_DS_NOERROR = _dspace_interface.A_DS_NOERROR
A_DS_WARN = _dspace_interface.A_DS_WARN
A_DS_ERROR = _dspace_interface.A_DS_ERROR
A_DS_FATAL = _dspace_interface.A_DS_FATAL
A_DS_KILLNOW = _dspace_interface.A_DS_KILLNOW

def DSErrorFunction(*args):
  return _dspace_interface.DSErrorFunction(*args)
DSErrorFunction = _dspace_interface.DSErrorFunction

def DSSecureMalloc(*args):
  return _dspace_interface.DSSecureMalloc(*args)
DSSecureMalloc = _dspace_interface.DSSecureMalloc

def DSSecureCalloc(*args):
  return _dspace_interface.DSSecureCalloc(*args)
DSSecureCalloc = _dspace_interface.DSSecureCalloc

def DSSecureRealloc(*args):
  return _dspace_interface.DSSecureRealloc(*args)
DSSecureRealloc = _dspace_interface.DSSecureRealloc

def DSSecureFree(*args):
  return _dspace_interface.DSSecureFree(*args)
DSSecureFree = _dspace_interface.DSSecureFree
M_DS_VAR_NULL = _dspace_interface.M_DS_VAR_NULL
M_DS_VAR_LOCKED = _dspace_interface.M_DS_VAR_LOCKED

def DSVariableAlloc(*args):
  return _dspace_interface.DSVariableAlloc(*args)
DSVariableAlloc = _dspace_interface.DSVariableAlloc

def DSVariableFree(*args):
  return _dspace_interface.DSVariableFree(*args)
DSVariableFree = _dspace_interface.DSVariableFree

def DSVariableRetain(*args):
  return _dspace_interface.DSVariableRetain(*args)
DSVariableRetain = _dspace_interface.DSVariableRetain

def DSVariableRelease(*args):
  return _dspace_interface.DSVariableRelease(*args)
DSVariableRelease = _dspace_interface.DSVariableRelease

def DSVariablePoolAlloc():
  return _dspace_interface.DSVariablePoolAlloc()
DSVariablePoolAlloc = _dspace_interface.DSVariablePoolAlloc

def DSVariablePoolCopy(*args):
  return _dspace_interface.DSVariablePoolCopy(*args)
DSVariablePoolCopy = _dspace_interface.DSVariablePoolCopy

def DSVariablePoolFree(*args):
  return _dspace_interface.DSVariablePoolFree(*args)
DSVariablePoolFree = _dspace_interface.DSVariablePoolFree

def DSVariablePoolByParsingString(*args):
  return _dspace_interface.DSVariablePoolByParsingString(*args)
DSVariablePoolByParsingString = _dspace_interface.DSVariablePoolByParsingString

def DSVariablePoolSetReadOnly(*args):
  return _dspace_interface.DSVariablePoolSetReadOnly(*args)
DSVariablePoolSetReadOnly = _dspace_interface.DSVariablePoolSetReadOnly

def DSVariablePoolSetReadWrite(*args):
  return _dspace_interface.DSVariablePoolSetReadWrite(*args)
DSVariablePoolSetReadWrite = _dspace_interface.DSVariablePoolSetReadWrite

def DSVariablePoolSetReadWriteAdd(*args):
  return _dspace_interface.DSVariablePoolSetReadWriteAdd(*args)
DSVariablePoolSetReadWriteAdd = _dspace_interface.DSVariablePoolSetReadWriteAdd

def DSVariablePoolAddVariableWithName(*args):
  return _dspace_interface.DSVariablePoolAddVariableWithName(*args)
DSVariablePoolAddVariableWithName = _dspace_interface.DSVariablePoolAddVariableWithName

def DSVariablePoolAddVariable(*args):
  return _dspace_interface.DSVariablePoolAddVariable(*args)
DSVariablePoolAddVariable = _dspace_interface.DSVariablePoolAddVariable

def DSVariablePoolCopyVariablesFromVariablePool(*args):
  return _dspace_interface.DSVariablePoolCopyVariablesFromVariablePool(*args)
DSVariablePoolCopyVariablesFromVariablePool = _dspace_interface.DSVariablePoolCopyVariablesFromVariablePool

def DSVariablePoolSetValueForVariableWithName(*args):
  return _dspace_interface.DSVariablePoolSetValueForVariableWithName(*args)
DSVariablePoolSetValueForVariableWithName = _dspace_interface.DSVariablePoolSetValueForVariableWithName

def DSVariablePoolNumberOfVariables(*args):
  return _dspace_interface.DSVariablePoolNumberOfVariables(*args)
DSVariablePoolNumberOfVariables = _dspace_interface.DSVariablePoolNumberOfVariables

def DSVariablePoolIsReadOnly(*args):
  return _dspace_interface.DSVariablePoolIsReadOnly(*args)
DSVariablePoolIsReadOnly = _dspace_interface.DSVariablePoolIsReadOnly

def DSVariablePoolIsReadWrite(*args):
  return _dspace_interface.DSVariablePoolIsReadWrite(*args)
DSVariablePoolIsReadWrite = _dspace_interface.DSVariablePoolIsReadWrite

def DSVariablePoolIsReadWriteAdd(*args):
  return _dspace_interface.DSVariablePoolIsReadWriteAdd(*args)
DSVariablePoolIsReadWriteAdd = _dspace_interface.DSVariablePoolIsReadWriteAdd

def DSVariablePoolHasVariableWithName(*args):
  return _dspace_interface.DSVariablePoolHasVariableWithName(*args)
DSVariablePoolHasVariableWithName = _dspace_interface.DSVariablePoolHasVariableWithName

def DSVariablePoolVariableWithName(*args):
  return _dspace_interface.DSVariablePoolVariableWithName(*args)
DSVariablePoolVariableWithName = _dspace_interface.DSVariablePoolVariableWithName

def DSVariablePoolVariableAtIndex(*args):
  return _dspace_interface.DSVariablePoolVariableAtIndex(*args)
DSVariablePoolVariableAtIndex = _dspace_interface.DSVariablePoolVariableAtIndex

def DSVariablePoolValueForVariableWithName(*args):
  return _dspace_interface.DSVariablePoolValueForVariableWithName(*args)
DSVariablePoolValueForVariableWithName = _dspace_interface.DSVariablePoolValueForVariableWithName

def DSVariablePoolAllVariables(*args):
  return _dspace_interface.DSVariablePoolAllVariables(*args)
DSVariablePoolAllVariables = _dspace_interface.DSVariablePoolAllVariables

def DSVariablePoolAllVariableNames(*args):
  return _dspace_interface.DSVariablePoolAllVariableNames(*args)
DSVariablePoolAllVariableNames = _dspace_interface.DSVariablePoolAllVariableNames

def DSVariablePoolIndexOfVariable(*args):
  return _dspace_interface.DSVariablePoolIndexOfVariable(*args)
DSVariablePoolIndexOfVariable = _dspace_interface.DSVariablePoolIndexOfVariable

def DSVariablePoolIndexOfVariableWithName(*args):
  return _dspace_interface.DSVariablePoolIndexOfVariableWithName(*args)
DSVariablePoolIndexOfVariableWithName = _dspace_interface.DSVariablePoolIndexOfVariableWithName

def DSVariablePoolPrint(*args):
  return _dspace_interface.DSVariablePoolPrint(*args)
DSVariablePoolPrint = _dspace_interface.DSVariablePoolPrint

def DSVariablePoolValuesAsVector(*args):
  return _dspace_interface.DSVariablePoolValuesAsVector(*args)
DSVariablePoolValuesAsVector = _dspace_interface.DSVariablePoolValuesAsVector
M_DS_MAT_NULL = _dspace_interface.M_DS_MAT_NULL
M_DS_MAT_OUTOFBOUNDS = _dspace_interface.M_DS_MAT_OUTOFBOUNDS
M_DS_MAT_NOINTERNAL = _dspace_interface.M_DS_MAT_NOINTERNAL

def DSMatrixAlloc(*args):
  return _dspace_interface.DSMatrixAlloc(*args)
DSMatrixAlloc = _dspace_interface.DSMatrixAlloc

def DSMatrixCalloc(*args):
  return _dspace_interface.DSMatrixCalloc(*args)
DSMatrixCalloc = _dspace_interface.DSMatrixCalloc

def DSMatrixCopy(*args):
  return _dspace_interface.DSMatrixCopy(*args)
DSMatrixCopy = _dspace_interface.DSMatrixCopy

def DSMatrixFree(*args):
  return _dspace_interface.DSMatrixFree(*args)
DSMatrixFree = _dspace_interface.DSMatrixFree

def DSMatrixIdentity(*args):
  return _dspace_interface.DSMatrixIdentity(*args)
DSMatrixIdentity = _dspace_interface.DSMatrixIdentity

def DSMatrixRandomNumbers(*args):
  return _dspace_interface.DSMatrixRandomNumbers(*args)
DSMatrixRandomNumbers = _dspace_interface.DSMatrixRandomNumbers

def DSMatrixByParsingString(*args):
  return _dspace_interface.DSMatrixByParsingString(*args)
DSMatrixByParsingString = _dspace_interface.DSMatrixByParsingString

def DSMatrixBySubstractingMatrix(*args):
  return _dspace_interface.DSMatrixBySubstractingMatrix(*args)
DSMatrixBySubstractingMatrix = _dspace_interface.DSMatrixBySubstractingMatrix

def DSMatrixByAddingMatrix(*args):
  return _dspace_interface.DSMatrixByAddingMatrix(*args)
DSMatrixByAddingMatrix = _dspace_interface.DSMatrixByAddingMatrix

def DSMatrixByDividingMatrix(*args):
  return _dspace_interface.DSMatrixByDividingMatrix(*args)
DSMatrixByDividingMatrix = _dspace_interface.DSMatrixByDividingMatrix

def DSMatrixByMultiplyingMatrix(*args):
  return _dspace_interface.DSMatrixByMultiplyingMatrix(*args)
DSMatrixByMultiplyingMatrix = _dspace_interface.DSMatrixByMultiplyingMatrix

def DSMatrixByApplyingFunction(*args):
  return _dspace_interface.DSMatrixByApplyingFunction(*args)
DSMatrixByApplyingFunction = _dspace_interface.DSMatrixByApplyingFunction

def DSMatrixBySubstractingScalar(*args):
  return _dspace_interface.DSMatrixBySubstractingScalar(*args)
DSMatrixBySubstractingScalar = _dspace_interface.DSMatrixBySubstractingScalar

def DSMatrixByAddingScalar(*args):
  return _dspace_interface.DSMatrixByAddingScalar(*args)
DSMatrixByAddingScalar = _dspace_interface.DSMatrixByAddingScalar

def DSMatrixByDividingScalar(*args):
  return _dspace_interface.DSMatrixByDividingScalar(*args)
DSMatrixByDividingScalar = _dspace_interface.DSMatrixByDividingScalar

def DSMatrixByMultiplyingScalar(*args):
  return _dspace_interface.DSMatrixByMultiplyingScalar(*args)
DSMatrixByMultiplyingScalar = _dspace_interface.DSMatrixByMultiplyingScalar

def DSMatrixDoubleValue(*args):
  return _dspace_interface.DSMatrixDoubleValue(*args)
DSMatrixDoubleValue = _dspace_interface.DSMatrixDoubleValue

def DSMatrixSetDoubleValue(*args):
  return _dspace_interface.DSMatrixSetDoubleValue(*args)
DSMatrixSetDoubleValue = _dspace_interface.DSMatrixSetDoubleValue

def DSMatrixSetDoubleValueAll(*args):
  return _dspace_interface.DSMatrixSetDoubleValueAll(*args)
DSMatrixSetDoubleValueAll = _dspace_interface.DSMatrixSetDoubleValueAll

def DSMatrixSetDoubleValuesList(*args):
  return _dspace_interface.DSMatrixSetDoubleValuesList(*args)
DSMatrixSetDoubleValuesList = _dspace_interface.DSMatrixSetDoubleValuesList

def DSMatrixSetDoubleValues(*args):
  return _dspace_interface.DSMatrixSetDoubleValues(*args)
DSMatrixSetDoubleValues = _dspace_interface.DSMatrixSetDoubleValues

def DSMatrixRoundToSignificantFigures(*args):
  return _dspace_interface.DSMatrixRoundToSignificantFigures(*args)
DSMatrixRoundToSignificantFigures = _dspace_interface.DSMatrixRoundToSignificantFigures

def DSMatrixSubMatrixExcludingColumnList(*args):
  return _dspace_interface.DSMatrixSubMatrixExcludingColumnList(*args)
DSMatrixSubMatrixExcludingColumnList = _dspace_interface.DSMatrixSubMatrixExcludingColumnList

def DSMatrixSubMatrixExcludingColumns(*args):
  return _dspace_interface.DSMatrixSubMatrixExcludingColumns(*args)
DSMatrixSubMatrixExcludingColumns = _dspace_interface.DSMatrixSubMatrixExcludingColumns

def DSMatrixSubMatrixExcludingRowList(*args):
  return _dspace_interface.DSMatrixSubMatrixExcludingRowList(*args)
DSMatrixSubMatrixExcludingRowList = _dspace_interface.DSMatrixSubMatrixExcludingRowList

def DSMatrixSubMatrixExcludingRows(*args):
  return _dspace_interface.DSMatrixSubMatrixExcludingRows(*args)
DSMatrixSubMatrixExcludingRows = _dspace_interface.DSMatrixSubMatrixExcludingRows

def DSMatrixSubMatrixIncludingRowList(*args):
  return _dspace_interface.DSMatrixSubMatrixIncludingRowList(*args)
DSMatrixSubMatrixIncludingRowList = _dspace_interface.DSMatrixSubMatrixIncludingRowList

def DSMatrixSubMatrixIncludingRows(*args):
  return _dspace_interface.DSMatrixSubMatrixIncludingRows(*args)
DSMatrixSubMatrixIncludingRows = _dspace_interface.DSMatrixSubMatrixIncludingRows

def DSMatrixSubMatrixIncludingColumnList(*args):
  return _dspace_interface.DSMatrixSubMatrixIncludingColumnList(*args)
DSMatrixSubMatrixIncludingColumnList = _dspace_interface.DSMatrixSubMatrixIncludingColumnList

def DSMatrixSubMatrixExcludingRowAndColumnList(*args):
  return _dspace_interface.DSMatrixSubMatrixExcludingRowAndColumnList(*args)
DSMatrixSubMatrixExcludingRowAndColumnList = _dspace_interface.DSMatrixSubMatrixExcludingRowAndColumnList

def DSMatrixSubMatrixExcludingRowsAndColumns(*args):
  return _dspace_interface.DSMatrixSubMatrixExcludingRowsAndColumns(*args)
DSMatrixSubMatrixExcludingRowsAndColumns = _dspace_interface.DSMatrixSubMatrixExcludingRowsAndColumns

def DSMatrixSubMatrixIncludingColumns(*args):
  return _dspace_interface.DSMatrixSubMatrixIncludingColumns(*args)
DSMatrixSubMatrixIncludingColumns = _dspace_interface.DSMatrixSubMatrixIncludingColumns

def DSMatrixSubMatrixIncludingRowAndColumnList(*args):
  return _dspace_interface.DSMatrixSubMatrixIncludingRowAndColumnList(*args)
DSMatrixSubMatrixIncludingRowAndColumnList = _dspace_interface.DSMatrixSubMatrixIncludingRowAndColumnList

def DSMatrixSubMatrixIncludingRowsAndColumns(*args):
  return _dspace_interface.DSMatrixSubMatrixIncludingRowsAndColumns(*args)
DSMatrixSubMatrixIncludingRowsAndColumns = _dspace_interface.DSMatrixSubMatrixIncludingRowsAndColumns

def DSMatrixAppendMatrices(*args):
  return _dspace_interface.DSMatrixAppendMatrices(*args)
DSMatrixAppendMatrices = _dspace_interface.DSMatrixAppendMatrices

def DSMatrixSwitchRows(*args):
  return _dspace_interface.DSMatrixSwitchRows(*args)
DSMatrixSwitchRows = _dspace_interface.DSMatrixSwitchRows

def DSMatrixSwitchColumns(*args):
  return _dspace_interface.DSMatrixSwitchColumns(*args)
DSMatrixSwitchColumns = _dspace_interface.DSMatrixSwitchColumns

def DSMatrixWithUniqueRows(*args):
  return _dspace_interface.DSMatrixWithUniqueRows(*args)
DSMatrixWithUniqueRows = _dspace_interface.DSMatrixWithUniqueRows

def DSMatrixPrint(*args):
  return _dspace_interface.DSMatrixPrint(*args)
DSMatrixPrint = _dspace_interface.DSMatrixPrint

def DSMatrixIsIdentity(*args):
  return _dspace_interface.DSMatrixIsIdentity(*args)
DSMatrixIsIdentity = _dspace_interface.DSMatrixIsIdentity

def DSMatrixIsSquare(*args):
  return _dspace_interface.DSMatrixIsSquare(*args)
DSMatrixIsSquare = _dspace_interface.DSMatrixIsSquare

def DSMatrixRank(*args):
  return _dspace_interface.DSMatrixRank(*args)
DSMatrixRank = _dspace_interface.DSMatrixRank

def minimumValue(*args):
  return _dspace_interface.minimumValue(*args)
minimumValue = _dspace_interface.minimumValue

def maximumValue(*args):
  return _dspace_interface.maximumValue(*args)
maximumValue = _dspace_interface.maximumValue

def DSMatrixDominantEigenvalue(*args):
  return _dspace_interface.DSMatrixDominantEigenvalue(*args)
DSMatrixDominantEigenvalue = _dspace_interface.DSMatrixDominantEigenvalue

def DSMatrixSubstractByMatrix(*args):
  return _dspace_interface.DSMatrixSubstractByMatrix(*args)
DSMatrixSubstractByMatrix = _dspace_interface.DSMatrixSubstractByMatrix

def DSMatrixAddByMatrix(*args):
  return _dspace_interface.DSMatrixAddByMatrix(*args)
DSMatrixAddByMatrix = _dspace_interface.DSMatrixAddByMatrix

def DSMatrixApplyFunction(*args):
  return _dspace_interface.DSMatrixApplyFunction(*args)
DSMatrixApplyFunction = _dspace_interface.DSMatrixApplyFunction

def DSMatrixMultiplyByScalar(*args):
  return _dspace_interface.DSMatrixMultiplyByScalar(*args)
DSMatrixMultiplyByScalar = _dspace_interface.DSMatrixMultiplyByScalar

def DSMatrixDeterminant(*args):
  return _dspace_interface.DSMatrixDeterminant(*args)
DSMatrixDeterminant = _dspace_interface.DSMatrixDeterminant

def DSMatrixMinor(*args):
  return _dspace_interface.DSMatrixMinor(*args)
DSMatrixMinor = _dspace_interface.DSMatrixMinor

def DSMatrixTranspose(*args):
  return _dspace_interface.DSMatrixTranspose(*args)
DSMatrixTranspose = _dspace_interface.DSMatrixTranspose

def DSMatrixInverse(*args):
  return _dspace_interface.DSMatrixInverse(*args)
DSMatrixInverse = _dspace_interface.DSMatrixInverse

def DSMatrixSVD(*args):
  return _dspace_interface.DSMatrixSVD(*args)
DSMatrixSVD = _dspace_interface.DSMatrixSVD

def DSMatrixRightNullspace(*args):
  return _dspace_interface.DSMatrixRightNullspace(*args)
DSMatrixRightNullspace = _dspace_interface.DSMatrixRightNullspace

def DSMatrixLeftNullspace(*args):
  return _dspace_interface.DSMatrixLeftNullspace(*args)
DSMatrixLeftNullspace = _dspace_interface.DSMatrixLeftNullspace

def DSMatrixPLUDecomposition(*args):
  return _dspace_interface.DSMatrixPLUDecomposition(*args)
DSMatrixPLUDecomposition = _dspace_interface.DSMatrixPLUDecomposition

def DSMatrixCharacteristicPolynomialCoefficients(*args):
  return _dspace_interface.DSMatrixCharacteristicPolynomialCoefficients(*args)
DSMatrixCharacteristicPolynomialCoefficients = _dspace_interface.DSMatrixCharacteristicPolynomialCoefficients

def DSMatrixUndeterminedCoefficientsRnMatrixForSize(*args):
  return _dspace_interface.DSMatrixUndeterminedCoefficientsRnMatrixForSize(*args)
DSMatrixUndeterminedCoefficientsRnMatrixForSize = _dspace_interface.DSMatrixUndeterminedCoefficientsRnMatrixForSize

def DSMatrixCharacteristicPolynomialUndeterminedCoefficients(*args):
  return _dspace_interface.DSMatrixCharacteristicPolynomialUndeterminedCoefficients(*args)
DSMatrixCharacteristicPolynomialUndeterminedCoefficients = _dspace_interface.DSMatrixCharacteristicPolynomialUndeterminedCoefficients

def DSMatrixDataForGLPK(*args):
  return _dspace_interface.DSMatrixDataForGLPK(*args)
DSMatrixDataForGLPK = _dspace_interface.DSMatrixDataForGLPK

def DSMatrixRowsForGLPK(*args):
  return _dspace_interface.DSMatrixRowsForGLPK(*args)
DSMatrixRowsForGLPK = _dspace_interface.DSMatrixRowsForGLPK

def DSMatrixColumnsForGLPK(*args):
  return _dspace_interface.DSMatrixColumnsForGLPK(*args)
DSMatrixColumnsForGLPK = _dspace_interface.DSMatrixColumnsForGLPK

def DSMatrixArrayAlloc():
  return _dspace_interface.DSMatrixArrayAlloc()
DSMatrixArrayAlloc = _dspace_interface.DSMatrixArrayAlloc

def DSMatrixArrayCopy(*args):
  return _dspace_interface.DSMatrixArrayCopy(*args)
DSMatrixArrayCopy = _dspace_interface.DSMatrixArrayCopy

def DSMatrixArrayFree(*args):
  return _dspace_interface.DSMatrixArrayFree(*args)
DSMatrixArrayFree = _dspace_interface.DSMatrixArrayFree

def DSMatrixArrayNumberOfMatrices(*args):
  return _dspace_interface.DSMatrixArrayNumberOfMatrices(*args)
DSMatrixArrayNumberOfMatrices = _dspace_interface.DSMatrixArrayNumberOfMatrices

def DSMatrixArrayMatrix(*args):
  return _dspace_interface.DSMatrixArrayMatrix(*args)
DSMatrixArrayMatrix = _dspace_interface.DSMatrixArrayMatrix

def DSMatrixArrayAddMatrix(*args):
  return _dspace_interface.DSMatrixArrayAddMatrix(*args)
DSMatrixArrayAddMatrix = _dspace_interface.DSMatrixArrayAddMatrix

def DSMatrixArrayDoubleWithIndices(*args):
  return _dspace_interface.DSMatrixArrayDoubleWithIndices(*args)
DSMatrixArrayDoubleWithIndices = _dspace_interface.DSMatrixArrayDoubleWithIndices

def DSMatrixArrayPrint(*args):
  return _dspace_interface.DSMatrixArrayPrint(*args)
DSMatrixArrayPrint = _dspace_interface.DSMatrixArrayPrint
DS_EXPRESSION_TYPE_UNDEFINED = _dspace_interface.DS_EXPRESSION_TYPE_UNDEFINED
DS_EXPRESSION_TYPE_OPERATOR = _dspace_interface.DS_EXPRESSION_TYPE_OPERATOR
DS_EXPRESSION_TYPE_CONSTANT = _dspace_interface.DS_EXPRESSION_TYPE_CONSTANT
DS_EXPRESSION_TYPE_VARIABLE = _dspace_interface.DS_EXPRESSION_TYPE_VARIABLE
DS_EXPRESSION_TYPE_FUNCTION = _dspace_interface.DS_EXPRESSION_TYPE_FUNCTION

def DSExpressionFree(*args):
  return _dspace_interface.DSExpressionFree(*args)
DSExpressionFree = _dspace_interface.DSExpressionFree

def DSExpressionCopy(*args):
  return _dspace_interface.DSExpressionCopy(*args)
DSExpressionCopy = _dspace_interface.DSExpressionCopy

def DSExpressionByParsingString(*args):
  return _dspace_interface.DSExpressionByParsingString(*args)
DSExpressionByParsingString = _dspace_interface.DSExpressionByParsingString

def DSExpressionAddExpressions(*args):
  return _dspace_interface.DSExpressionAddExpressions(*args)
DSExpressionAddExpressions = _dspace_interface.DSExpressionAddExpressions

def DSExpressionSubstractExpressions(*args):
  return _dspace_interface.DSExpressionSubstractExpressions(*args)
DSExpressionSubstractExpressions = _dspace_interface.DSExpressionSubstractExpressions

def DSExpressionByCompressingConstantVariables(*args):
  return _dspace_interface.DSExpressionByCompressingConstantVariables(*args)
DSExpressionByCompressingConstantVariables = _dspace_interface.DSExpressionByCompressingConstantVariables

def DSExpressionEvaluateWithVariablePool(*args):
  return _dspace_interface.DSExpressionEvaluateWithVariablePool(*args)
DSExpressionEvaluateWithVariablePool = _dspace_interface.DSExpressionEvaluateWithVariablePool

def DSExpressionEquationLHSExpression(*args):
  return _dspace_interface.DSExpressionEquationLHSExpression(*args)
DSExpressionEquationLHSExpression = _dspace_interface.DSExpressionEquationLHSExpression

def DSExpressionEquationRHSExpression(*args):
  return _dspace_interface.DSExpressionEquationRHSExpression(*args)
DSExpressionEquationRHSExpression = _dspace_interface.DSExpressionEquationRHSExpression

def DSExpressionVariablesInExpression(*args):
  return _dspace_interface.DSExpressionVariablesInExpression(*args)
DSExpressionVariablesInExpression = _dspace_interface.DSExpressionVariablesInExpression

def DSExpressionAsString(*args):
  return _dspace_interface.DSExpressionAsString(*args)
DSExpressionAsString = _dspace_interface.DSExpressionAsString

def DSExpressionAsLatexString(*args):
  return _dspace_interface.DSExpressionAsLatexString(*args)
DSExpressionAsLatexString = _dspace_interface.DSExpressionAsLatexString

def DSExpressionPrint(*args):
  return _dspace_interface.DSExpressionPrint(*args)
DSExpressionPrint = _dspace_interface.DSExpressionPrint
M_DS_GMA_NULL = _dspace_interface.M_DS_GMA_NULL

def DSGMASystemCopy(*args):
  return _dspace_interface.DSGMASystemCopy(*args)
DSGMASystemCopy = _dspace_interface.DSGMASystemCopy

def DSGMASystemFree(*args):
  return _dspace_interface.DSGMASystemFree(*args)
DSGMASystemFree = _dspace_interface.DSGMASystemFree

def DSGMASystemByParsingStringList(*args):
  return _dspace_interface.DSGMASystemByParsingStringList(*args)
DSGMASystemByParsingStringList = _dspace_interface.DSGMASystemByParsingStringList

def DSGMASystemByParsingStrings(*args):
  return _dspace_interface.DSGMASystemByParsingStrings(*args)
DSGMASystemByParsingStrings = _dspace_interface.DSGMASystemByParsingStrings

def DSGMASystemByParsingStringsWithXi(*args):
  return _dspace_interface.DSGMASystemByParsingStringsWithXi(*args)
DSGMASystemByParsingStringsWithXi = _dspace_interface.DSGMASystemByParsingStringsWithXi

def DSGMASystemNumberOfEquations(*args):
  return _dspace_interface.DSGMASystemNumberOfEquations(*args)
DSGMASystemNumberOfEquations = _dspace_interface.DSGMASystemNumberOfEquations

def DSGMASystemEquations(*args):
  return _dspace_interface.DSGMASystemEquations(*args)
DSGMASystemEquations = _dspace_interface.DSGMASystemEquations

def DSGMASystemPositiveTermForEquations(*args):
  return _dspace_interface.DSGMASystemPositiveTermForEquations(*args)
DSGMASystemPositiveTermForEquations = _dspace_interface.DSGMASystemPositiveTermForEquations

def DSGMASystemPositiveTermsForEquations(*args):
  return _dspace_interface.DSGMASystemPositiveTermsForEquations(*args)
DSGMASystemPositiveTermsForEquations = _dspace_interface.DSGMASystemPositiveTermsForEquations

def DSGMASystemNegativeTermForEquations(*args):
  return _dspace_interface.DSGMASystemNegativeTermForEquations(*args)
DSGMASystemNegativeTermForEquations = _dspace_interface.DSGMASystemNegativeTermForEquations

def DSGMASystemNegativeTermsForEquations(*args):
  return _dspace_interface.DSGMASystemNegativeTermsForEquations(*args)
DSGMASystemNegativeTermsForEquations = _dspace_interface.DSGMASystemNegativeTermsForEquations

def DSGMASystemAlpha(*args):
  return _dspace_interface.DSGMASystemAlpha(*args)
DSGMASystemAlpha = _dspace_interface.DSGMASystemAlpha

def DSGMASystemBeta(*args):
  return _dspace_interface.DSGMASystemBeta(*args)
DSGMASystemBeta = _dspace_interface.DSGMASystemBeta

def DSGMASystemGd(*args):
  return _dspace_interface.DSGMASystemGd(*args)
DSGMASystemGd = _dspace_interface.DSGMASystemGd

def DSGMASystemGi(*args):
  return _dspace_interface.DSGMASystemGi(*args)
DSGMASystemGi = _dspace_interface.DSGMASystemGi

def DSGMASystemHd(*args):
  return _dspace_interface.DSGMASystemHd(*args)
DSGMASystemHd = _dspace_interface.DSGMASystemHd

def DSGMASystemHi(*args):
  return _dspace_interface.DSGMASystemHi(*args)
DSGMASystemHi = _dspace_interface.DSGMASystemHi

def DSGMASystemXd(*args):
  return _dspace_interface.DSGMASystemXd(*args)
DSGMASystemXd = _dspace_interface.DSGMASystemXd

def DSGMASystemXd_a(*args):
  return _dspace_interface.DSGMASystemXd_a(*args)
DSGMASystemXd_a = _dspace_interface.DSGMASystemXd_a

def DSGMASystemXd_t(*args):
  return _dspace_interface.DSGMASystemXd_t(*args)
DSGMASystemXd_t = _dspace_interface.DSGMASystemXd_t

def DSGMASystemXi(*args):
  return _dspace_interface.DSGMASystemXi(*args)
DSGMASystemXi = _dspace_interface.DSGMASystemXi

def DSGMASystemNumberOfCases(*args):
  return _dspace_interface.DSGMASystemNumberOfCases(*args)
DSGMASystemNumberOfCases = _dspace_interface.DSGMASystemNumberOfCases

def DSGMASystemSignature(*args):
  return _dspace_interface.DSGMASystemSignature(*args)
DSGMASystemSignature = _dspace_interface.DSGMASystemSignature

def DSGMASystemPrint(*args):
  return _dspace_interface.DSGMASystemPrint(*args)
DSGMASystemPrint = _dspace_interface.DSGMASystemPrint

def DSGMASystemPrintEquations(*args):
  return _dspace_interface.DSGMASystemPrintEquations(*args)
DSGMASystemPrintEquations = _dspace_interface.DSGMASystemPrintEquations

def DSGMASystemTermWithTermNumber(*args):
  return _dspace_interface.DSGMASystemTermWithTermNumber(*args)
DSGMASystemTermWithTermNumber = _dspace_interface.DSGMASystemTermWithTermNumber

def DSGMASystemNetworkConnectivity(*args):
  return _dspace_interface.DSGMASystemNetworkConnectivity(*args)
DSGMASystemNetworkConnectivity = _dspace_interface.DSGMASystemNetworkConnectivity

def DSGMASystemFluxDictionary(*args):
  return _dspace_interface.DSGMASystemFluxDictionary(*args)
DSGMASystemFluxDictionary = _dspace_interface.DSGMASystemFluxDictionary

def DSGMASystemPrecursorProductRelationships(*args):
  return _dspace_interface.DSGMASystemPrecursorProductRelationships(*args)
DSGMASystemPrecursorProductRelationships = _dspace_interface.DSGMASystemPrecursorProductRelationships
M_DS_SSYS_NULL = _dspace_interface.M_DS_SSYS_NULL

def DSSSystemCopy(*args):
  return _dspace_interface.DSSSystemCopy(*args)
DSSSystemCopy = _dspace_interface.DSSSystemCopy

def DSSSystemFree(*args):
  return _dspace_interface.DSSSystemFree(*args)
DSSSystemFree = _dspace_interface.DSSSystemFree

def DSSSystemWithTermsFromGMA(*args):
  return _dspace_interface.DSSSystemWithTermsFromGMA(*args)
DSSSystemWithTermsFromGMA = _dspace_interface.DSSSystemWithTermsFromGMA

def DSSSystemByParsingStringList(*args):
  return _dspace_interface.DSSSystemByParsingStringList(*args)
DSSSystemByParsingStringList = _dspace_interface.DSSSystemByParsingStringList

def DSSSystemByParsingStrings(*args):
  return _dspace_interface.DSSSystemByParsingStrings(*args)
DSSSystemByParsingStrings = _dspace_interface.DSSSystemByParsingStrings

def DSSSystemByRemovingAlgebraicConstraints(*args):
  return _dspace_interface.DSSSystemByRemovingAlgebraicConstraints(*args)
DSSSystemByRemovingAlgebraicConstraints = _dspace_interface.DSSSystemByRemovingAlgebraicConstraints

def DSSSystemSteadyStateFunction(*args):
  return _dspace_interface.DSSSystemSteadyStateFunction(*args)
DSSSystemSteadyStateFunction = _dspace_interface.DSSSystemSteadyStateFunction

def DSSSystemSteadyStateValues(*args):
  return _dspace_interface.DSSSystemSteadyStateValues(*args)
DSSSystemSteadyStateValues = _dspace_interface.DSSSystemSteadyStateValues

def DSSSystemAuxiliaryVariablesForSteadyState(*args):
  return _dspace_interface.DSSSystemAuxiliaryVariablesForSteadyState(*args)
DSSSystemAuxiliaryVariablesForSteadyState = _dspace_interface.DSSSystemAuxiliaryVariablesForSteadyState

def DSSSystemSteadyStateFluxForDependentVariables(*args):
  return _dspace_interface.DSSSystemSteadyStateFluxForDependentVariables(*args)
DSSSystemSteadyStateFluxForDependentVariables = _dspace_interface.DSSSystemSteadyStateFluxForDependentVariables

def DSSSystemSteadyStateFlux(*args):
  return _dspace_interface.DSSSystemSteadyStateFlux(*args)
DSSSystemSteadyStateFlux = _dspace_interface.DSSSystemSteadyStateFlux

def DSSSystemRouthArrayForPoolTurnover(*args):
  return _dspace_interface.DSSSystemRouthArrayForPoolTurnover(*args)
DSSSystemRouthArrayForPoolTurnover = _dspace_interface.DSSSystemRouthArrayForPoolTurnover

def DSSSystemRouthArrayForSteadyState(*args):
  return _dspace_interface.DSSSystemRouthArrayForSteadyState(*args)
DSSSystemRouthArrayForSteadyState = _dspace_interface.DSSSystemRouthArrayForSteadyState

def DSSSystemRouthArray(*args):
  return _dspace_interface.DSSSystemRouthArray(*args)
DSSSystemRouthArray = _dspace_interface.DSSSystemRouthArray

def DSSSystemNumberOfPositiveRootsForRouthArray(*args):
  return _dspace_interface.DSSSystemNumberOfPositiveRootsForRouthArray(*args)
DSSSystemNumberOfPositiveRootsForRouthArray = _dspace_interface.DSSSystemNumberOfPositiveRootsForRouthArray

def DSSSystemPositiveRoots(*args):
  return _dspace_interface.DSSSystemPositiveRoots(*args)
DSSSystemPositiveRoots = _dspace_interface.DSSSystemPositiveRoots

def DSSSystemPositiveRootsForSteadyStateAndFlux(*args):
  return _dspace_interface.DSSSystemPositiveRootsForSteadyStateAndFlux(*args)
DSSSystemPositiveRootsForSteadyStateAndFlux = _dspace_interface.DSSSystemPositiveRootsForSteadyStateAndFlux

def DSSSystemPositiveRootsForSteadyState(*args):
  return _dspace_interface.DSSSystemPositiveRootsForSteadyState(*args)
DSSSystemPositiveRootsForSteadyState = _dspace_interface.DSSSystemPositiveRootsForSteadyState

def DSSSystemRouthIndex(*args):
  return _dspace_interface.DSSSystemRouthIndex(*args)
DSSSystemRouthIndex = _dspace_interface.DSSSystemRouthIndex

def DSSSystemCharacteristicEquationCoefficientIndex(*args):
  return _dspace_interface.DSSSystemCharacteristicEquationCoefficientIndex(*args)
DSSSystemCharacteristicEquationCoefficientIndex = _dspace_interface.DSSSystemCharacteristicEquationCoefficientIndex

def DSSSystemCharacteristicEquationCoefficientsNumberSignChanges(*args):
  return _dspace_interface.DSSSystemCharacteristicEquationCoefficientsNumberSignChanges(*args)
DSSSystemCharacteristicEquationCoefficientsNumberSignChanges = _dspace_interface.DSSSystemCharacteristicEquationCoefficientsNumberSignChanges

def DSSSystemLogarithmicGain(*args):
  return _dspace_interface.DSSSystemLogarithmicGain(*args)
DSSSystemLogarithmicGain = _dspace_interface.DSSSystemLogarithmicGain

def DSSSystemNumberOfEquations(*args):
  return _dspace_interface.DSSSystemNumberOfEquations(*args)
DSSSystemNumberOfEquations = _dspace_interface.DSSSystemNumberOfEquations

def DSSSystemEquations(*args):
  return _dspace_interface.DSSSystemEquations(*args)
DSSSystemEquations = _dspace_interface.DSSSystemEquations

def DSSSystemSolution(*args):
  return _dspace_interface.DSSSystemSolution(*args)
DSSSystemSolution = _dspace_interface.DSSSystemSolution

def DSSSystemLogarithmicSolution(*args):
  return _dspace_interface.DSSSystemLogarithmicSolution(*args)
DSSSystemLogarithmicSolution = _dspace_interface.DSSSystemLogarithmicSolution

def DSSSystemAlpha(*args):
  return _dspace_interface.DSSSystemAlpha(*args)
DSSSystemAlpha = _dspace_interface.DSSSystemAlpha

def DSSSystemBeta(*args):
  return _dspace_interface.DSSSystemBeta(*args)
DSSSystemBeta = _dspace_interface.DSSSystemBeta

def DSSSystemGd(*args):
  return _dspace_interface.DSSSystemGd(*args)
DSSSystemGd = _dspace_interface.DSSSystemGd

def DSSSystemGi(*args):
  return _dspace_interface.DSSSystemGi(*args)
DSSSystemGi = _dspace_interface.DSSSystemGi

def DSSSystemHd(*args):
  return _dspace_interface.DSSSystemHd(*args)
DSSSystemHd = _dspace_interface.DSSSystemHd

def DSSSystemHi(*args):
  return _dspace_interface.DSSSystemHi(*args)
DSSSystemHi = _dspace_interface.DSSSystemHi

def DSSSystemM(*args):
  return _dspace_interface.DSSSystemM(*args)
DSSSystemM = _dspace_interface.DSSSystemM

def DSSSystemM_a(*args):
  return _dspace_interface.DSSSystemM_a(*args)
DSSSystemM_a = _dspace_interface.DSSSystemM_a

def DSSSystemAd(*args):
  return _dspace_interface.DSSSystemAd(*args)
DSSSystemAd = _dspace_interface.DSSSystemAd

def DSSSystemQd_a(*args):
  return _dspace_interface.DSSSystemQd_a(*args)
DSSSystemQd_a = _dspace_interface.DSSSystemQd_a

def DSSSystemQi_a(*args):
  return _dspace_interface.DSSSystemQi_a(*args)
DSSSystemQi_a = _dspace_interface.DSSSystemQi_a

def DSSSystemQB_a(*args):
  return _dspace_interface.DSSSystemQB_a(*args)
DSSSystemQB_a = _dspace_interface.DSSSystemQB_a

def DSSSystemAd_a(*args):
  return _dspace_interface.DSSSystemAd_a(*args)
DSSSystemAd_a = _dspace_interface.DSSSystemAd_a

def DSSSystemAd_t(*args):
  return _dspace_interface.DSSSystemAd_t(*args)
DSSSystemAd_t = _dspace_interface.DSSSystemAd_t

def DSSSystemAi(*args):
  return _dspace_interface.DSSSystemAi(*args)
DSSSystemAi = _dspace_interface.DSSSystemAi

def DSSSystemB(*args):
  return _dspace_interface.DSSSystemB(*args)
DSSSystemB = _dspace_interface.DSSSystemB

def DSSSystemA(*args):
  return _dspace_interface.DSSSystemA(*args)
DSSSystemA = _dspace_interface.DSSSystemA

def DSSSystemG(*args):
  return _dspace_interface.DSSSystemG(*args)
DSSSystemG = _dspace_interface.DSSSystemG

def DSSSystemH(*args):
  return _dspace_interface.DSSSystemH(*args)
DSSSystemH = _dspace_interface.DSSSystemH

def DSSSystemXd(*args):
  return _dspace_interface.DSSSystemXd(*args)
DSSSystemXd = _dspace_interface.DSSSystemXd

def DSSSystemXd_a(*args):
  return _dspace_interface.DSSSystemXd_a(*args)
DSSSystemXd_a = _dspace_interface.DSSSystemXd_a

def DSSSystemXd_t(*args):
  return _dspace_interface.DSSSystemXd_t(*args)
DSSSystemXd_t = _dspace_interface.DSSSystemXd_t

def DSSSystemXi(*args):
  return _dspace_interface.DSSSystemXi(*args)
DSSSystemXi = _dspace_interface.DSSSystemXi

def DSSSystemHasSolution(*args):
  return _dspace_interface.DSSSystemHasSolution(*args)
DSSSystemHasSolution = _dspace_interface.DSSSystemHasSolution

def DSSSystemIsSingular(*args):
  return _dspace_interface.DSSSystemIsSingular(*args)
DSSSystemIsSingular = _dspace_interface.DSSSystemIsSingular

def DSSSystemPrint(*args):
  return _dspace_interface.DSSSystemPrint(*args)
DSSSystemPrint = _dspace_interface.DSSSystemPrint

def DSSSystemPrintEquations(*args):
  return _dspace_interface.DSSSystemPrintEquations(*args)
DSSSystemPrintEquations = _dspace_interface.DSSSystemPrintEquations

def DSSSystemPrintSolution(*args):
  return _dspace_interface.DSSSystemPrintSolution(*args)
DSSSystemPrintSolution = _dspace_interface.DSSSystemPrintSolution

def DSSSystemPrintLogarithmicSolution(*args):
  return _dspace_interface.DSSSystemPrintLogarithmicSolution(*args)
DSSSystemPrintLogarithmicSolution = _dspace_interface.DSSSystemPrintLogarithmicSolution
M_DS_CASE_NULL = _dspace_interface.M_DS_CASE_NULL
DS_CASE_NUMBER_BIG_ENDIAN = _dspace_interface.DS_CASE_NUMBER_BIG_ENDIAN
DS_CASE_NUMBER_SMALL_ENDIAN = _dspace_interface.DS_CASE_NUMBER_SMALL_ENDIAN

def DSCaseSetEndianness(*args):
  return _dspace_interface.DSCaseSetEndianness(*args)
DSCaseSetEndianness = _dspace_interface.DSCaseSetEndianness

def DSCaseEndianness():
  return _dspace_interface.DSCaseEndianness()
DSCaseEndianness = _dspace_interface.DSCaseEndianness

def DSCaseCopy(*args):
  return _dspace_interface.DSCaseCopy(*args)
DSCaseCopy = _dspace_interface.DSCaseCopy

def DSCaseFree(*args):
  return _dspace_interface.DSCaseFree(*args)
DSCaseFree = _dspace_interface.DSCaseFree

def DSCaseWithTermsFromGMA(*args):
  return _dspace_interface.DSCaseWithTermsFromGMA(*args)
DSCaseWithTermsFromGMA = _dspace_interface.DSCaseWithTermsFromGMA

def DSCaseWithTermsFromDesignSpace(*args):
  return _dspace_interface.DSCaseWithTermsFromDesignSpace(*args)
DSCaseWithTermsFromDesignSpace = _dspace_interface.DSCaseWithTermsFromDesignSpace

def DSCaseHasSolution(*args):
  return _dspace_interface.DSCaseHasSolution(*args)
DSCaseHasSolution = _dspace_interface.DSCaseHasSolution

def DSCaseNumberOfEquations(*args):
  return _dspace_interface.DSCaseNumberOfEquations(*args)
DSCaseNumberOfEquations = _dspace_interface.DSCaseNumberOfEquations

def DSCaseEquations(*args):
  return _dspace_interface.DSCaseEquations(*args)
DSCaseEquations = _dspace_interface.DSCaseEquations

def DSCaseSolution(*args):
  return _dspace_interface.DSCaseSolution(*args)
DSCaseSolution = _dspace_interface.DSCaseSolution

def DSCaseLogarithmicSolution(*args):
  return _dspace_interface.DSCaseLogarithmicSolution(*args)
DSCaseLogarithmicSolution = _dspace_interface.DSCaseLogarithmicSolution

def DSCaseNumberOfConditions(*args):
  return _dspace_interface.DSCaseNumberOfConditions(*args)
DSCaseNumberOfConditions = _dspace_interface.DSCaseNumberOfConditions

def DSCaseConditions(*args):
  return _dspace_interface.DSCaseConditions(*args)
DSCaseConditions = _dspace_interface.DSCaseConditions

def DSCaseLogarithmicConditions(*args):
  return _dspace_interface.DSCaseLogarithmicConditions(*args)
DSCaseLogarithmicConditions = _dspace_interface.DSCaseLogarithmicConditions

def DSCaseNumberOfBoundaries(*args):
  return _dspace_interface.DSCaseNumberOfBoundaries(*args)
DSCaseNumberOfBoundaries = _dspace_interface.DSCaseNumberOfBoundaries

def DSCaseBoundaries(*args):
  return _dspace_interface.DSCaseBoundaries(*args)
DSCaseBoundaries = _dspace_interface.DSCaseBoundaries

def DSCaseLogarithmicBoundaries(*args):
  return _dspace_interface.DSCaseLogarithmicBoundaries(*args)
DSCaseLogarithmicBoundaries = _dspace_interface.DSCaseLogarithmicBoundaries

def DSCaseNumber(*args):
  return _dspace_interface.DSCaseNumber(*args)
DSCaseNumber = _dspace_interface.DSCaseNumber

def DSCaseSignature(*args):
  return _dspace_interface.DSCaseSignature(*args)
DSCaseSignature = _dspace_interface.DSCaseSignature

def DSCaseSSystem(*args):
  return _dspace_interface.DSCaseSSystem(*args)
DSCaseSSystem = _dspace_interface.DSCaseSSystem

def DSCaseLogarithmicGain(*args):
  return _dspace_interface.DSCaseLogarithmicGain(*args)
DSCaseLogarithmicGain = _dspace_interface.DSCaseLogarithmicGain

def DSCaseDoubleValueBoundariesAtPoint(*args):
  return _dspace_interface.DSCaseDoubleValueBoundariesAtPoint(*args)
DSCaseDoubleValueBoundariesAtPoint = _dspace_interface.DSCaseDoubleValueBoundariesAtPoint

def DSCaseAddConstraints(*args):
  return _dspace_interface.DSCaseAddConstraints(*args)
DSCaseAddConstraints = _dspace_interface.DSCaseAddConstraints

def DSCaseConditionsAreValid(*args):
  return _dspace_interface.DSCaseConditionsAreValid(*args)
DSCaseConditionsAreValid = _dspace_interface.DSCaseConditionsAreValid

def DSCaseIsValid(*args):
  return _dspace_interface.DSCaseIsValid(*args)
DSCaseIsValid = _dspace_interface.DSCaseIsValid

def DSCaseIsValidInStateSpace(*args):
  return _dspace_interface.DSCaseIsValidInStateSpace(*args)
DSCaseIsValidInStateSpace = _dspace_interface.DSCaseIsValidInStateSpace

def DSCaseIsValidAtPoint(*args):
  return _dspace_interface.DSCaseIsValidAtPoint(*args)
DSCaseIsValidAtPoint = _dspace_interface.DSCaseIsValidAtPoint

def DSCaseIsValidInStateSpaceAtPoint(*args):
  return _dspace_interface.DSCaseIsValidInStateSpaceAtPoint(*args)
DSCaseIsValidInStateSpaceAtPoint = _dspace_interface.DSCaseIsValidInStateSpaceAtPoint

def DSCaseIsValidAtSlice(*args):
  return _dspace_interface.DSCaseIsValidAtSlice(*args)
DSCaseIsValidAtSlice = _dspace_interface.DSCaseIsValidAtSlice

def DSCaseVerticesForSlice(*args):
  return _dspace_interface.DSCaseVerticesForSlice(*args)
DSCaseVerticesForSlice = _dspace_interface.DSCaseVerticesForSlice

def DSCaseBoundingRangeForVariableWithConstraints(*args):
  return _dspace_interface.DSCaseBoundingRangeForVariableWithConstraints(*args)
DSCaseBoundingRangeForVariableWithConstraints = _dspace_interface.DSCaseBoundingRangeForVariableWithConstraints

def DSCaseBoundingRangeForVariable(*args):
  return _dspace_interface.DSCaseBoundingRangeForVariable(*args)
DSCaseBoundingRangeForVariable = _dspace_interface.DSCaseBoundingRangeForVariable

def DSCaseVerticesFor1DSlice(*args):
  return _dspace_interface.DSCaseVerticesFor1DSlice(*args)
DSCaseVerticesFor1DSlice = _dspace_interface.DSCaseVerticesFor1DSlice

def DSCaseVerticesFor2DSlice(*args):
  return _dspace_interface.DSCaseVerticesFor2DSlice(*args)
DSCaseVerticesFor2DSlice = _dspace_interface.DSCaseVerticesFor2DSlice

def DSCaseFacesFor3DSliceAndConnectivity(*args):
  return _dspace_interface.DSCaseFacesFor3DSliceAndConnectivity(*args)
DSCaseFacesFor3DSliceAndConnectivity = _dspace_interface.DSCaseFacesFor3DSliceAndConnectivity

def DSCaseVerticesFor3DSliceAndConnectivity(*args):
  return _dspace_interface.DSCaseVerticesFor3DSliceAndConnectivity(*args)
DSCaseVerticesFor3DSliceAndConnectivity = _dspace_interface.DSCaseVerticesFor3DSliceAndConnectivity

def DSCaseVerticesFor3DSlice(*args):
  return _dspace_interface.DSCaseVerticesFor3DSlice(*args)
DSCaseVerticesFor3DSlice = _dspace_interface.DSCaseVerticesFor3DSlice

def DSCaseVerticesForNDSlice(*args):
  return _dspace_interface.DSCaseVerticesForNDSlice(*args)
DSCaseVerticesForNDSlice = _dspace_interface.DSCaseVerticesForNDSlice

def DSCaseValidParameterSet(*args):
  return _dspace_interface.DSCaseValidParameterSet(*args)
DSCaseValidParameterSet = _dspace_interface.DSCaseValidParameterSet

def DSCaseValidParameterSetAtSlice(*args):
  return _dspace_interface.DSCaseValidParameterSetAtSlice(*args)
DSCaseValidParameterSetAtSlice = _dspace_interface.DSCaseValidParameterSetAtSlice

def DSCaseIntersectionListIsValid(*args):
  return _dspace_interface.DSCaseIntersectionListIsValid(*args)
DSCaseIntersectionListIsValid = _dspace_interface.DSCaseIntersectionListIsValid

def DSCaseIntersectionIsValid(*args):
  return _dspace_interface.DSCaseIntersectionIsValid(*args)
DSCaseIntersectionIsValid = _dspace_interface.DSCaseIntersectionIsValid

def DSCaseIntersectionIsValidAtSlice(*args):
  return _dspace_interface.DSCaseIntersectionIsValidAtSlice(*args)
DSCaseIntersectionIsValidAtSlice = _dspace_interface.DSCaseIntersectionIsValidAtSlice

def DSCaseIntersectionVerticesForSlice(*args):
  return _dspace_interface.DSCaseIntersectionVerticesForSlice(*args)
DSCaseIntersectionVerticesForSlice = _dspace_interface.DSCaseIntersectionVerticesForSlice

def DSCaseIntersectionFacesFor3DSliceAndConnectivity(*args):
  return _dspace_interface.DSCaseIntersectionFacesFor3DSliceAndConnectivity(*args)
DSCaseIntersectionFacesFor3DSliceAndConnectivity = _dspace_interface.DSCaseIntersectionFacesFor3DSliceAndConnectivity

def DSCaseIntersectionExceptSliceIsValid(*args):
  return _dspace_interface.DSCaseIntersectionExceptSliceIsValid(*args)
DSCaseIntersectionExceptSliceIsValid = _dspace_interface.DSCaseIntersectionExceptSliceIsValid

def DSCaseIntersectionExceptSliceIsValidAtSlice(*args):
  return _dspace_interface.DSCaseIntersectionExceptSliceIsValidAtSlice(*args)
DSCaseIntersectionExceptSliceIsValidAtSlice = _dspace_interface.DSCaseIntersectionExceptSliceIsValidAtSlice

def DSCaseIntersectionExceptSliceValidParameterSet(*args):
  return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSet(*args)
DSCaseIntersectionExceptSliceValidParameterSet = _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSet

def DSCaseIntersectionExceptSliceValidParameterSetWithConstraints(*args):
  return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetWithConstraints(*args)
DSCaseIntersectionExceptSliceValidParameterSetWithConstraints = _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetWithConstraints

def DSCaseIntersectionExceptSliceValidParameterSetAtSlice(*args):
  return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetAtSlice(*args)
DSCaseIntersectionExceptSliceValidParameterSetAtSlice = _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetAtSlice

def DSCaseNumberForSignature(*args):
  return _dspace_interface.DSCaseNumberForSignature(*args)
DSCaseNumberForSignature = _dspace_interface.DSCaseNumberForSignature

def DSCaseSignatureForCaseNumber(*args):
  return _dspace_interface.DSCaseSignatureForCaseNumber(*args)
DSCaseSignatureForCaseNumber = _dspace_interface.DSCaseSignatureForCaseNumber

def DSCaseSignatureToString(*args):
  return _dspace_interface.DSCaseSignatureToString(*args)
DSCaseSignatureToString = _dspace_interface.DSCaseSignatureToString

def DSCasePrint(*args):
  return _dspace_interface.DSCasePrint(*args)
DSCasePrint = _dspace_interface.DSCasePrint

def DSCasePrintEquations(*args):
  return _dspace_interface.DSCasePrintEquations(*args)
DSCasePrintEquations = _dspace_interface.DSCasePrintEquations

def DSCasePrintSolution(*args):
  return _dspace_interface.DSCasePrintSolution(*args)
DSCasePrintSolution = _dspace_interface.DSCasePrintSolution

def DSCasePrintLogarithmicSolution(*args):
  return _dspace_interface.DSCasePrintLogarithmicSolution(*args)
DSCasePrintLogarithmicSolution = _dspace_interface.DSCasePrintLogarithmicSolution

def DSCasePrintConditions(*args):
  return _dspace_interface.DSCasePrintConditions(*args)
DSCasePrintConditions = _dspace_interface.DSCasePrintConditions

def DSCasePrintLogarithmicConditions(*args):
  return _dspace_interface.DSCasePrintLogarithmicConditions(*args)
DSCasePrintLogarithmicConditions = _dspace_interface.DSCasePrintLogarithmicConditions

def DSCasePrintBoundaries(*args):
  return _dspace_interface.DSCasePrintBoundaries(*args)
DSCasePrintBoundaries = _dspace_interface.DSCasePrintBoundaries

def DSCasePrintLogarithmicBoundaries(*args):
  return _dspace_interface.DSCasePrintLogarithmicBoundaries(*args)
DSCasePrintLogarithmicBoundaries = _dspace_interface.DSCasePrintLogarithmicBoundaries
M_DS_DESIGN_SPACE_NULL = _dspace_interface.M_DS_DESIGN_SPACE_NULL

def DSDesignSpaceAlloc():
  return _dspace_interface.DSDesignSpaceAlloc()
DSDesignSpaceAlloc = _dspace_interface.DSDesignSpaceAlloc

def DSDesignSpaceFree(*args):
  return _dspace_interface.DSDesignSpaceFree(*args)
DSDesignSpaceFree = _dspace_interface.DSDesignSpaceFree

def DSDesignSpaceByParsingStringList(*args):
  return _dspace_interface.DSDesignSpaceByParsingStringList(*args)
DSDesignSpaceByParsingStringList = _dspace_interface.DSDesignSpaceByParsingStringList

def DSDesignSpaceByParsingStrings(*args):
  return _dspace_interface.DSDesignSpaceByParsingStrings(*args)
DSDesignSpaceByParsingStrings = _dspace_interface.DSDesignSpaceByParsingStrings

def DSDesignSpaceByParsingStringsWithXi(*args):
  return _dspace_interface.DSDesignSpaceByParsingStringsWithXi(*args)
DSDesignSpaceByParsingStringsWithXi = _dspace_interface.DSDesignSpaceByParsingStringsWithXi

def DSDesignSpaceSetGMA(*args):
  return _dspace_interface.DSDesignSpaceSetGMA(*args)
DSDesignSpaceSetGMA = _dspace_interface.DSDesignSpaceSetGMA

def DSDesignSpaceAddConditions(*args):
  return _dspace_interface.DSDesignSpaceAddConditions(*args)
DSDesignSpaceAddConditions = _dspace_interface.DSDesignSpaceAddConditions

def DSDesignSpaceXi(*args):
  return _dspace_interface.DSDesignSpaceXi(*args)
DSDesignSpaceXi = _dspace_interface.DSDesignSpaceXi

def DSDesignSpaceNumberOfEquations(*args):
  return _dspace_interface.DSDesignSpaceNumberOfEquations(*args)
DSDesignSpaceNumberOfEquations = _dspace_interface.DSDesignSpaceNumberOfEquations

def DSDesignSpaceEquations(*args):
  return _dspace_interface.DSDesignSpaceEquations(*args)
DSDesignSpaceEquations = _dspace_interface.DSDesignSpaceEquations

def DSDesignSpaceSignature(*args):
  return _dspace_interface.DSDesignSpaceSignature(*args)
DSDesignSpaceSignature = _dspace_interface.DSDesignSpaceSignature

def DSDesignSpaceSignatureToString(*args):
  return _dspace_interface.DSDesignSpaceSignatureToString(*args)
DSDesignSpaceSignatureToString = _dspace_interface.DSDesignSpaceSignatureToString

def DSDesignSpaceNumberOfValidCases(*args):
  return _dspace_interface.DSDesignSpaceNumberOfValidCases(*args)
DSDesignSpaceNumberOfValidCases = _dspace_interface.DSDesignSpaceNumberOfValidCases

def DSDesignSpaceNumberOfCases(*args):
  return _dspace_interface.DSDesignSpaceNumberOfCases(*args)
DSDesignSpaceNumberOfCases = _dspace_interface.DSDesignSpaceNumberOfCases

def DSDesignSpaceCaseWithCaseNumber(*args):
  return _dspace_interface.DSDesignSpaceCaseWithCaseNumber(*args)
DSDesignSpaceCaseWithCaseNumber = _dspace_interface.DSDesignSpaceCaseWithCaseNumber

def DSDesignSpaceCaseWithCaseSignature(*args):
  return _dspace_interface.DSDesignSpaceCaseWithCaseSignature(*args)
DSDesignSpaceCaseWithCaseSignature = _dspace_interface.DSDesignSpaceCaseWithCaseSignature

def DSDesignSpaceCaseWithCaseNumberIsValid(*args):
  return _dspace_interface.DSDesignSpaceCaseWithCaseNumberIsValid(*args)
DSDesignSpaceCaseWithCaseNumberIsValid = _dspace_interface.DSDesignSpaceCaseWithCaseNumberIsValid

def DSDesignSpaceCaseWithCaseSignatureIsValid(*args):
  return _dspace_interface.DSDesignSpaceCaseWithCaseSignatureIsValid(*args)
DSDesignSpaceCaseWithCaseSignatureIsValid = _dspace_interface.DSDesignSpaceCaseWithCaseSignatureIsValid

def DSDesignSpaceGMASystem(*args):
  return _dspace_interface.DSDesignSpaceGMASystem(*args)
DSDesignSpaceGMASystem = _dspace_interface.DSDesignSpaceGMASystem

def DSDesignSpaceCyclicalCaseDictionary(*args):
  return _dspace_interface.DSDesignSpaceCyclicalCaseDictionary(*args)
DSDesignSpaceCyclicalCaseDictionary = _dspace_interface.DSDesignSpaceCyclicalCaseDictionary

def DSDesignSpaceTermListForAllStrings(*args):
  return _dspace_interface.DSDesignSpaceTermListForAllStrings(*args)
DSDesignSpaceTermListForAllStrings = _dspace_interface.DSDesignSpaceTermListForAllStrings

def DSDesignSpaceAddConstraints(*args):
  return _dspace_interface.DSDesignSpaceAddConstraints(*args)
DSDesignSpaceAddConstraints = _dspace_interface.DSDesignSpaceAddConstraints

def DSDesignSpacePrint(*args):
  return _dspace_interface.DSDesignSpacePrint(*args)
DSDesignSpacePrint = _dspace_interface.DSDesignSpacePrint

def DSDesignSpaceCaseNumbersWithPrefix(*args):
  return _dspace_interface.DSDesignSpaceCaseNumbersWithPrefix(*args)
DSDesignSpaceCaseNumbersWithPrefix = _dspace_interface.DSDesignSpaceCaseNumbersWithPrefix

def DSDesignSpaceCalculateCases(*args):
  return _dspace_interface.DSDesignSpaceCalculateCases(*args)
DSDesignSpaceCalculateCases = _dspace_interface.DSDesignSpaceCalculateCases

def DSDesignSpaceCalculateValidCasesByPrunning(*args):
  return _dspace_interface.DSDesignSpaceCalculateValidCasesByPrunning(*args)
DSDesignSpaceCalculateValidCasesByPrunning = _dspace_interface.DSDesignSpaceCalculateValidCasesByPrunning

def DSDesignSpaceCalculateAllValidCases(*args):
  return _dspace_interface.DSDesignSpaceCalculateAllValidCases(*args)
DSDesignSpaceCalculateAllValidCases = _dspace_interface.DSDesignSpaceCalculateAllValidCases

def DSDesignSpaceCalculateAllValidCasesForSliceByResolvingCyclicalCases(*args):
  return _dspace_interface.DSDesignSpaceCalculateAllValidCasesForSliceByResolvingCyclicalCases(*args)
DSDesignSpaceCalculateAllValidCasesForSliceByResolvingCyclicalCases = _dspace_interface.DSDesignSpaceCalculateAllValidCasesForSliceByResolvingCyclicalCases

def DSDesignSpaceCalculateAllValidCasesByResolvingCyclicalCases(*args):
  return _dspace_interface.DSDesignSpaceCalculateAllValidCasesByResolvingCyclicalCases(*args)
DSDesignSpaceCalculateAllValidCasesByResolvingCyclicalCases = _dspace_interface.DSDesignSpaceCalculateAllValidCasesByResolvingCyclicalCases

def DSDesignSpaceCalculateAllValidCasesForSlice(*args):
  return _dspace_interface.DSDesignSpaceCalculateAllValidCasesForSlice(*args)
DSDesignSpaceCalculateAllValidCasesForSlice = _dspace_interface.DSDesignSpaceCalculateAllValidCasesForSlice

def DSDesignSpaceNumberOfCyclicalCases(*args):
  return _dspace_interface.DSDesignSpaceNumberOfCyclicalCases(*args)
DSDesignSpaceNumberOfCyclicalCases = _dspace_interface.DSDesignSpaceNumberOfCyclicalCases

def DSDesignSpaceCyclicalCaseWithCaseNumber(*args):
  return _dspace_interface.DSDesignSpaceCyclicalCaseWithCaseNumber(*args)
DSDesignSpaceCyclicalCaseWithCaseNumber = _dspace_interface.DSDesignSpaceCyclicalCaseWithCaseNumber

def DSDesignSpaceCalculateCyclicalCase(*args):
  return _dspace_interface.DSDesignSpaceCalculateCyclicalCase(*args)
DSDesignSpaceCalculateCyclicalCase = _dspace_interface.DSDesignSpaceCalculateCyclicalCase

def DSDesignSpaceCalculateCyclicalCases(*args):
  return _dspace_interface.DSDesignSpaceCalculateCyclicalCases(*args)
DSDesignSpaceCalculateCyclicalCases = _dspace_interface.DSDesignSpaceCalculateCyclicalCases

def DSDesignSpaceCalculateValidityOfCases(*args):
  return _dspace_interface.DSDesignSpaceCalculateValidityOfCases(*args)
DSDesignSpaceCalculateValidityOfCases = _dspace_interface.DSDesignSpaceCalculateValidityOfCases
M_DS_VERTICES_NULL = _dspace_interface.M_DS_VERTICES_NULL

def DSVerticesAlloc(*args):
  return _dspace_interface.DSVerticesAlloc(*args)
DSVerticesAlloc = _dspace_interface.DSVerticesAlloc

def DSVerticesFree(*args):
  return _dspace_interface.DSVerticesFree(*args)
DSVerticesFree = _dspace_interface.DSVerticesFree

def DSVerticesAddVertex(*args):
  return _dspace_interface.DSVerticesAddVertex(*args)
DSVerticesAddVertex = _dspace_interface.DSVerticesAddVertex

def DSVerticesAreEqual(*args):
  return _dspace_interface.DSVerticesAreEqual(*args)
DSVerticesAreEqual = _dspace_interface.DSVerticesAreEqual

def DSVerticesVertexAtIndex(*args):
  return _dspace_interface.DSVerticesVertexAtIndex(*args)
DSVerticesVertexAtIndex = _dspace_interface.DSVerticesVertexAtIndex

def DSVerticesOrder2DVertices(*args):
  return _dspace_interface.DSVerticesOrder2DVertices(*args)
DSVerticesOrder2DVertices = _dspace_interface.DSVerticesOrder2DVertices

def DSVerticesPrint(*args):
  return _dspace_interface.DSVerticesPrint(*args)
DSVerticesPrint = _dspace_interface.DSVerticesPrint

def DSVerticesToMatrix(*args):
  return _dspace_interface.DSVerticesToMatrix(*args)
DSVerticesToMatrix = _dspace_interface.DSVerticesToMatrix

def DSVertices3DConnectivityMatrix(*args):
  return _dspace_interface.DSVertices3DConnectivityMatrix(*args)
DSVertices3DConnectivityMatrix = _dspace_interface.DSVertices3DConnectivityMatrix

def DSVertices3DFaces(*args):
  return _dspace_interface.DSVertices3DFaces(*args)
DSVertices3DFaces = _dspace_interface.DSVertices3DFaces

def DSVerticesConnectivityMatrix(*args):
  return _dspace_interface.DSVerticesConnectivityMatrix(*args)
DSVerticesConnectivityMatrix = _dspace_interface.DSVerticesConnectivityMatrix
M_DS_DICTIONARY_NULL = _dspace_interface.M_DS_DICTIONARY_NULL

def DSDictionaryAlloc():
  return _dspace_interface.DSDictionaryAlloc()
DSDictionaryAlloc = _dspace_interface.DSDictionaryAlloc

def DSDictionaryFree(*args):
  return _dspace_interface.DSDictionaryFree(*args)
DSDictionaryFree = _dspace_interface.DSDictionaryFree

def DSDictionaryFreeWithFunction(*args):
  return _dspace_interface.DSDictionaryFreeWithFunction(*args)
DSDictionaryFreeWithFunction = _dspace_interface.DSDictionaryFreeWithFunction

def DSDictionaryCount(*args):
  return _dspace_interface.DSDictionaryCount(*args)
DSDictionaryCount = _dspace_interface.DSDictionaryCount

def DSDictionaryValueForName(*args):
  return _dspace_interface.DSDictionaryValueForName(*args)
DSDictionaryValueForName = _dspace_interface.DSDictionaryValueForName

def DSDictionaryNames(*args):
  return _dspace_interface.DSDictionaryNames(*args)
DSDictionaryNames = _dspace_interface.DSDictionaryNames

def DSDictionaryAddValueWithName(*args):
  return _dspace_interface.DSDictionaryAddValueWithName(*args)
DSDictionaryAddValueWithName = _dspace_interface.DSDictionaryAddValueWithName

def DSDictionaryPrint(*args):
  return _dspace_interface.DSDictionaryPrint(*args)
DSDictionaryPrint = _dspace_interface.DSDictionaryPrint

def DSDictionaryPrintWithFunction(*args):
  return _dspace_interface.DSDictionaryPrintWithFunction(*args)
DSDictionaryPrintWithFunction = _dspace_interface.DSDictionaryPrintWithFunction

def DSDictionaryFromArray(*args):
  return _dspace_interface.DSDictionaryFromArray(*args)
DSDictionaryFromArray = _dspace_interface.DSDictionaryFromArray
M_DS_STACK_NULL = _dspace_interface.M_DS_STACK_NULL

def DSStackAlloc():
  return _dspace_interface.DSStackAlloc()
DSStackAlloc = _dspace_interface.DSStackAlloc

def DSStackFree(*args):
  return _dspace_interface.DSStackFree(*args)
DSStackFree = _dspace_interface.DSStackFree

def DSStackFreeWithFunction(*args):
  return _dspace_interface.DSStackFreeWithFunction(*args)
DSStackFreeWithFunction = _dspace_interface.DSStackFreeWithFunction

def DSStackPush(*args):
  return _dspace_interface.DSStackPush(*args)
DSStackPush = _dspace_interface.DSStackPush

def DSStackPop(*args):
  return _dspace_interface.DSStackPop(*args)
DSStackPop = _dspace_interface.DSStackPop

def DSStackObjectAtIndex(*args):
  return _dspace_interface.DSStackObjectAtIndex(*args)
DSStackObjectAtIndex = _dspace_interface.DSStackObjectAtIndex

def DSStackCount(*args):
  return _dspace_interface.DSStackCount(*args)
DSStackCount = _dspace_interface.DSStackCount
M_DS_SUBCASE_NULL = _dspace_interface.M_DS_SUBCASE_NULL

def DSCyclicalCaseForCaseInDesignSpace(*args):
  return _dspace_interface.DSCyclicalCaseForCaseInDesignSpace(*args)
DSCyclicalCaseForCaseInDesignSpace = _dspace_interface.DSCyclicalCaseForCaseInDesignSpace

def DSCyclicalCaseFree(*args):
  return _dspace_interface.DSCyclicalCaseFree(*args)
DSCyclicalCaseFree = _dspace_interface.DSCyclicalCaseFree

def DSCyclicalCaseXd(*args):
  return _dspace_interface.DSCyclicalCaseXd(*args)
DSCyclicalCaseXd = _dspace_interface.DSCyclicalCaseXd

def DSCyclicalCaseXi(*args):
  return _dspace_interface.DSCyclicalCaseXi(*args)
DSCyclicalCaseXi = _dspace_interface.DSCyclicalCaseXi

def DSCyclicalCaseInternalDesignSpace(*args):
  return _dspace_interface.DSCyclicalCaseInternalDesignSpace(*args)
DSCyclicalCaseInternalDesignSpace = _dspace_interface.DSCyclicalCaseInternalDesignSpace

def DSCyclicalCaseOriginalCase(*args):
  return _dspace_interface.DSCyclicalCaseOriginalCase(*args)
DSCyclicalCaseOriginalCase = _dspace_interface.DSCyclicalCaseOriginalCase

def DSCyclicalCaseNumberOfValidSubcases(*args):
  return _dspace_interface.DSCyclicalCaseNumberOfValidSubcases(*args)
DSCyclicalCaseNumberOfValidSubcases = _dspace_interface.DSCyclicalCaseNumberOfValidSubcases

def DSCyclicalCaseNumberOfSubcases(*args):
  return _dspace_interface.DSCyclicalCaseNumberOfSubcases(*args)
DSCyclicalCaseNumberOfSubcases = _dspace_interface.DSCyclicalCaseNumberOfSubcases

def DSCyclicalCaseSubcaseWithCaseNumber(*args):
  return _dspace_interface.DSCyclicalCaseSubcaseWithCaseNumber(*args)
DSCyclicalCaseSubcaseWithCaseNumber = _dspace_interface.DSCyclicalCaseSubcaseWithCaseNumber

def DSCyclicalCaseCyclicalSubcaseWithCaseNumber(*args):
  return _dspace_interface.DSCyclicalCaseCyclicalSubcaseWithCaseNumber(*args)
DSCyclicalCaseCyclicalSubcaseWithCaseNumber = _dspace_interface.DSCyclicalCaseCyclicalSubcaseWithCaseNumber

def DSCyclicalCaseNumberOfEquations(*args):
  return _dspace_interface.DSCyclicalCaseNumberOfEquations(*args)
DSCyclicalCaseNumberOfEquations = _dspace_interface.DSCyclicalCaseNumberOfEquations

def DSCyclicalCaseEquations(*args):
  return _dspace_interface.DSCyclicalCaseEquations(*args)
DSCyclicalCaseEquations = _dspace_interface.DSCyclicalCaseEquations

def DSCyclicalCaseNumberOfConditions(*args):
  return _dspace_interface.DSCyclicalCaseNumberOfConditions(*args)
DSCyclicalCaseNumberOfConditions = _dspace_interface.DSCyclicalCaseNumberOfConditions

def DSCyclicalCaseConditions(*args):
  return _dspace_interface.DSCyclicalCaseConditions(*args)
DSCyclicalCaseConditions = _dspace_interface.DSCyclicalCaseConditions

def DSCyclicalCaseLogarithmicConditions(*args):
  return _dspace_interface.DSCyclicalCaseLogarithmicConditions(*args)
DSCyclicalCaseLogarithmicConditions = _dspace_interface.DSCyclicalCaseLogarithmicConditions

def DSCyclicalCaseNumberOfBoundaries(*args):
  return _dspace_interface.DSCyclicalCaseNumberOfBoundaries(*args)
DSCyclicalCaseNumberOfBoundaries = _dspace_interface.DSCyclicalCaseNumberOfBoundaries

def DSCyclicalCaseBoundaries(*args):
  return _dspace_interface.DSCyclicalCaseBoundaries(*args)
DSCyclicalCaseBoundaries = _dspace_interface.DSCyclicalCaseBoundaries

def DSCyclicalCaseLogarithmicBoundaries(*args):
  return _dspace_interface.DSCyclicalCaseLogarithmicBoundaries(*args)
DSCyclicalCaseLogarithmicBoundaries = _dspace_interface.DSCyclicalCaseLogarithmicBoundaries

def DSCyclicalCaseNumber(*args):
  return _dspace_interface.DSCyclicalCaseNumber(*args)
DSCyclicalCaseNumber = _dspace_interface.DSCyclicalCaseNumber

def DSCyclicalCaseSignature(*args):
  return _dspace_interface.DSCyclicalCaseSignature(*args)
DSCyclicalCaseSignature = _dspace_interface.DSCyclicalCaseSignature

def DSCyclicalCaseSignatureToString(*args):
  return _dspace_interface.DSCyclicalCaseSignatureToString(*args)
DSCyclicalCaseSignatureToString = _dspace_interface.DSCyclicalCaseSignatureToString

def DSCyclicalCaseSSystem(*args):
  return _dspace_interface.DSCyclicalCaseSSystem(*args)
DSCyclicalCaseSSystem = _dspace_interface.DSCyclicalCaseSSystem

def DSCyclicalCaseIsValid(*args):
  return _dspace_interface.DSCyclicalCaseIsValid(*args)
DSCyclicalCaseIsValid = _dspace_interface.DSCyclicalCaseIsValid

def DSCyclicalCaseIsValidAtSlice(*args):
  return _dspace_interface.DSCyclicalCaseIsValidAtSlice(*args)
DSCyclicalCaseIsValidAtSlice = _dspace_interface.DSCyclicalCaseIsValidAtSlice

def DSCyclicalCaseCalculateAllValidSubcasesByResolvingCyclicalCases(*args):
  return _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesByResolvingCyclicalCases(*args)
DSCyclicalCaseCalculateAllValidSubcasesByResolvingCyclicalCases = _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesByResolvingCyclicalCases

def DSCyclicalCaseCalculateAllValidSubcasesForSliceByResolvingCyclicalCases(*args):
  return _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesForSliceByResolvingCyclicalCases(*args)
DSCyclicalCaseCalculateAllValidSubcasesForSliceByResolvingCyclicalCases = _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesForSliceByResolvingCyclicalCases

def DSCyclicalCaseCalculateAllValidSubcases(*args):
  return _dspace_interface.DSCyclicalCaseCalculateAllValidSubcases(*args)
DSCyclicalCaseCalculateAllValidSubcases = _dspace_interface.DSCyclicalCaseCalculateAllValidSubcases

def DSCyclicalCaseCalculateAllValidSubcasesForSlice(*args):
  return _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesForSlice(*args)
DSCyclicalCaseCalculateAllValidSubcasesForSlice = _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesForSlice

def DSCyclicalCaseVerticesFor2DSlice(*args):
  return _dspace_interface.DSCyclicalCaseVerticesFor2DSlice(*args)
DSCyclicalCaseVerticesFor2DSlice = _dspace_interface.DSCyclicalCaseVerticesFor2DSlice

def DSCaseNDVertexEnumeration(*args):
  return _dspace_interface.DSCaseNDVertexEnumeration(*args)
DSCaseNDVertexEnumeration = _dspace_interface.DSCaseNDVertexEnumeration

def DSSWIGDSDictionaryFromPyDict(*args):
  return _dspace_interface.DSSWIGDSDictionaryFromPyDict(*args)
DSSWIGDSDictionaryFromPyDict = _dspace_interface.DSSWIGDSDictionaryFromPyDict

def DSSWIGDSDictionaryFreeCharValues(*args):
  return _dspace_interface.DSSWIGDSDictionaryFreeCharValues(*args)
DSSWIGDSDictionaryFreeCharValues = _dspace_interface.DSSWIGDSDictionaryFreeCharValues

def DSSWIGVoidAsSubcase(*args):
  return _dspace_interface.DSSWIGVoidAsSubcase(*args)
DSSWIGVoidAsSubcase = _dspace_interface.DSSWIGVoidAsSubcase

def DSSWIGVoidAsCase(*args):
  return _dspace_interface.DSSWIGVoidAsCase(*args)
DSSWIGVoidAsCase = _dspace_interface.DSSWIGVoidAsCase

def DSSWIGVoidAsVertices(*args):
  return _dspace_interface.DSSWIGVoidAsVertices(*args)
DSSWIGVoidAsVertices = _dspace_interface.DSSWIGVoidAsVertices

def DSSWIGVoidAsExpression(*args):
  return _dspace_interface.DSSWIGVoidAsExpression(*args)
DSSWIGVoidAsExpression = _dspace_interface.DSSWIGVoidAsExpression

def DSSWIGDesignSpaceParseWrapper(*args):
  return _dspace_interface.DSSWIGDesignSpaceParseWrapper(*args)
DSSWIGDesignSpaceParseWrapper = _dspace_interface.DSSWIGDesignSpaceParseWrapper

def DSSWIGDesignSpaceParseWrapperWithXi(*args):
  return _dspace_interface.DSSWIGDesignSpaceParseWrapperWithXi(*args)
DSSWIGDesignSpaceParseWrapperWithXi = _dspace_interface.DSSWIGDesignSpaceParseWrapperWithXi

def DSSWIGGMASystemParseWrapper(*args):
  return _dspace_interface.DSSWIGGMASystemParseWrapper(*args)
DSSWIGGMASystemParseWrapper = _dspace_interface.DSSWIGGMASystemParseWrapper

def DSSWIGSSystemParseWrapper(*args):
  return _dspace_interface.DSSWIGSSystemParseWrapper(*args)
DSSWIGSSystemParseWrapper = _dspace_interface.DSSWIGSSystemParseWrapper

def DSExpressionAtIndexOfExpressionArray(*args):
  return _dspace_interface.DSExpressionAtIndexOfExpressionArray(*args)
DSExpressionAtIndexOfExpressionArray = _dspace_interface.DSExpressionAtIndexOfExpressionArray

def DSUIntegerAtIndexOfIntegerArray(*args):
  return _dspace_interface.DSUIntegerAtIndexOfIntegerArray(*args)
DSUIntegerAtIndexOfIntegerArray = _dspace_interface.DSUIntegerAtIndexOfIntegerArray

def DSCaseAtIndexOfArray(*args):
  return _dspace_interface.DSCaseAtIndexOfArray(*args)
DSCaseAtIndexOfArray = _dspace_interface.DSCaseAtIndexOfArray

def DSDictionaryKeyAtIndex(*args):
  return _dspace_interface.DSDictionaryKeyAtIndex(*args)
DSDictionaryKeyAtIndex = _dspace_interface.DSDictionaryKeyAtIndex

def DSSSystemPositiveRootsSWIG(*args):
  return _dspace_interface.DSSSystemPositiveRootsSWIG(*args)
DSSSystemPositiveRootsSWIG = _dspace_interface.DSSSystemPositiveRootsSWIG
VERSION = _dspace_interface.VERSION
# This file is compatible with both classic and new-style classes.


